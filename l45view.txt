==>VIEW

Syntax:
*CREATE 
CRTEATE VIEW vw_tablename AS
--statements


*READ
SELECT columns FROM viewname;

*UPDATE
CRTEATE OR REPLACE VIEW vw_tablename AS
--statements


*DELETE
DROP VIEW IF EXISTS viewname;

-----------------------------------------------

=>List all tables (BASE TABLE)
SHOW TABLES;
SHOW FULL TABLES;
SHOW FULL TABELS WHERE TABLE_TYPE LIKE 'BASE TABLE';
SHEW FULL TABLES IN wdf5361 WHERE TABLE_TYPE LIKE 'BASE TABLE';

=>List all view (VIEW)
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';
SHOW FULL TABLES IN wdf5361 WHERE TABLE_TYPE LIKE 'VIEW';

_____________________________________________________

CREATE TABLE IF NOT EXISTS shoppers(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	phone VARCHAR(15) NOT NULL UNIQUE
);

DESC shoppers;
SHOW INDEX FROM shoppers;

INSERT INTO shoppers(name,phone)
VALUES('susu','0911111'),
('tuntun','0922222');

SELECT * FROM shoppers;


CREATE TABLE IF NOT EXISTS products(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE,
	price DECIMAL(10,2) NOT NULL
);

DESC products;
SHOW INDEX FROM products;

INSERT INTO products(name,price)
VALUES('redbull',600),
('sponsor',500);

SELECT * FROM products;

CREATE TABLE IF NOT EXISTS checkout(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	date TIMESTAMP DEFAULT NOW(),
	product_id INT NOT NULL,
	qty INT NOT NULL,
	total DECIMAL(10,2) NOT NULL,
	payment ENUM('VISA','MPU','COD') NOT NULL,
	shopper_id INT NOT NULL,
	FOREIGN KEY(shopper_id) REFERENCES shoppers(id),
	FOREIGN KEY(product_id) REFERENCES products(id)
);

DESC checkouts;
SHOW INDEX FROM checkouts;


INSERT INTO checkout(product_id,qty,total,payment,shopper_id)
VALUES(1,2,1200,3,2),
(1,5,3000,1,1),
(2,1,400,2,1),
(1,2,1200,3,2),
(2,3,1200,3,2),
(1,4,2400,1,1);

SELECT * FROM checkout;
SELECT * FROM products;
SELECT * FROM shoppers;

==>Payment Saving
SELECT payment,SUM(total) AS totalamount 
FROM checkout
GROUP BY payment
ORDER BY totalamount DESC;

==>CREATE VIEW

CREATE VIEW vw_paymentsaving AS
SELECT payment,SUM(total) AS totalamount 
FROM checkout
GROUP BY payment
ORDER BY totalamount DESC;

==>UPDATE VIEW

CREATE OR REPLACE VIEW vw_paymentsaving AS
SELECT payment,SUM(total) AS totalamount 
FROM checkout
GROUP BY payment
ORDER BY totalamount;

SELECT * FROM vw_paymentsaving;

DROP VIEW IF EXISTS vw_paymentsaving;
_________________________________________________


SELECT name,qty,total
FROM checkout
INNER JOIN products
ON checkout.product_id = products.id;

==>BIG Sales

SELECT products.name,SUM(checkout.qty),SUM(checkout.total)
FROM checkout
INNER JOIN products
ON checkout.product_id = products.id
GROUP BY checkout.product_id;


CREATE VIEW vw_bigsales AS
SELECT products.name,SUM(checkout.qty),SUM(checkout.total)
FROM checkout
INNER JOIN products
ON checkout.product_id = products.id
GROUP BY checkout.product_id;

SHOW FULL TABLES;
SELECT * FROM vw_bigsales;

__________________________________________

==>BIG shoppers

SELECT shoppers.name,SUM(checkout.qty) AS totalqty,SUM(checkout.total) AS totalamount
FROM checkout
INNER JOIN shoppers
ON checkout.shopper_id = shoppers.id
GROUP BY checkout.shopper_id
ORDER BY totalamount DESC;


CREATE VIEW vw_bigshoppers AS
SELECT shoppers.name,SUM(checkout.qty) AS totalqty,SUM(checkout.total) AS totalamount
FROM checkout
INNER JOIN shoppers
ON checkout.shopper_id = shoppers.id
GROUP BY checkout.shopper_id
ORDER BY totalamount DESC;


SELECT * FROM vw_bigshoppers;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';


DESC vw_bigshoppers;

*errror CAN'T INSERT DATA

INSERT INTO vw_bigshoppers(name,totalqty,totalamount)
VALUES("kyaw kyaw",15,50000);
___________________________________________

==>NOT IN

SELECT shoppers.name,SUM(checkout.total) AS totalamount
FROM checkout
INNER JOIN shoppers
ON checkout.shopper_id = shoppers.id
WHERE payment NOT IN('VISA','MPU')
GROUP BY shoppers.id;